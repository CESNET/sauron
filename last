#!/usr/bin/perl -I/usr/local/sauron
#
# last -- utlity to display lastlog info
#
# Copyright (c) Timo Kokkonen <tjko@iki.fi>  2001.
# $Id$
#
require 5;
use Getopt::Long;
use Term::ReadKey;
use Sauron::DB;
use Sauron::Util;
use Sauron::BackEnd;

my ($PG_DIR,$PG_NAME) = ($0 =~ /^(.*\/)(.*)$/);
$0 = $PG_NAME;

if (-r "/etc/sauron/config") {
  $config_file="/etc/sauron/config";
} elsif (-r "/usr/local/etc/sauron/config") {
  $config_file="/usr/local/etc/sauron/config"; 
} else {
  die("cannot find config file in /etc/sauron or /usr/local/etc/sauron");
}

do "$config_file" || die("cannot load config: $config_file");

##############################################

$argcount=@ARGV;

if (($ARGV[0] =~ /^--?h/)) {
  print "syntax: $0 [-h] [-num] [name]\n\n";
  exit(0);
}

if ($ARGV[0] =~ /^-(\d+)/) {
  $count_rule="$1";
  shift;
}

$user_rule="$ARGV[0]" if ($ARGV[0]);

db_connect($DB_CONNECT);

$count=get_lastlog($count_rule,$user_rule,\@q);


printf "%-9s %5s %-15s %14s - %s\n",
        'User','SID','Host','Login','Logout';
print "-" x 78 . "\n";

for $j (0..($count-1)) {
  printf "$j %-9s %5d %-15s %14s - %s\n",
        $q[$j][0],$q[$j][1],$q[$j][2],$q[$j][3],$q[$j][4];
}



exit;

