#!/usr/bin/perl -I/usr/local/sauron
#
# adduser - utility to create users
#
# Copyright (c) Timo Kokkonen <tjko@iki.fi>  2000.
# $Id$
#
require 5;
use Getopt::Long;
use Term::ReadKey;
use Sauron::DB;
use Sauron::Util;
use Sauron::BackEnd;

my ($PG_DIR,$PG_NAME) = ($0 =~ /^(.*\/)(.*)$/);
$0 = $PG_NAME;

if (-r "/etc/sauron/config") {
  $config_file="/etc/sauron/config";
} elsif (-r "/usr/local/etc/sauron/config") {
  $config_file="/usr/local/etc/sauron/config"; 
} else {
  die("cannot find config file in /etc/sauron or /usr/local/etc/sauron");
}

do "$config_file" || die("cannot load config: $config_file");


##############################################

my(
   $result,$superuser,$user,$salt,$pwd,$cdate,
   $i,$t,$r,$res,%user
  );


$cdate = time;
$user = (getpwuid($<))[0];
set_muser($user);

$result = GetOptions("user=s","superuser","help|h","passwd=s","name=s",
		     "group=s","comment=s","email=s");

if ($opt_help) {
  print "syntax: $0 [--user=username] [--group=name] [--superuser] " .
        "[--help]\n" ,
        "\t\t[--passwd=password] [--name=\"<user's full name>\"]\n",
	"\t\t[--email=\"foo\@bar\"] [--comment=\"comments\"]\n\n";
  exit(0);
}

db_connect($DB_CONNECT);


unless ($opt_user) {
  print "Enter username: ";
  chomp ($opt_user = ReadLine 0);
  $i=1;
}
fatal("Invalid username '$opt_user'!") unless ($opt_user =~ /^\S+$/);

unless ($opt_group) {
  print "Enter group name (empty for none): ";
  chomp($opt_group = ReadLine 0);
  $i=1;
}

if ($opt_group) {
  $gid=get_user_group_id($opt_group);
  fatal("Cannot find group '$opt_group'") unless ($gid > 0);
} else {
  $gid=-1;
}


unless ($opt_name) {
  print "Enter user description (full name): ";
  chomp($opt_name = ReadLine 0);
  $i=1;
}

unless ($opt_email) {
  print "Enter user email address: ";
  chomp($opt_email = ReadLine 0);
  $i=1;
}

unless ($opt_comment) {
  print "Enter optional user info: ";
  chomp($opt_comment = ReadLine 0);
  $i=1;
}

unless ($opt_passwd) {
  print "Enter password: ";
  ReadMode 'noecho';
  $opt_passwd = ReadLine 0;
  print "\n";
  ReadMode 'normal';
  chomp $opt_passwd;
  $i=1;
}

$superuser=($opt_superuser==1?"true":"false");
$user = (getpwuid($<))[0];
$salt=int(rand(900000)+100000);
$pwd=pwd_crypt($opt_passwd,$salt);

if ($i) { # ask confirmation only in interactive session...
  print "\t Username: $opt_user\n",
  "\t Longname: $opt_name\n",
  "\t    email: $opt_email\n",
  "\t  comment: $opt_comment\n",
  "\tsuperuser: $superuser\n",
  "Add this user [y/n]?";

  chomp($t=ReadLine 0);
  unless ($t eq 'y' || $t eq 'Y') {
    print "User not added!\n";
    exit(1);
  }
}

$user{username}=$opt_user;
$user{password}=$pwd;
$user{name}=$opt_name;
$user{superuser}=$superuser;
$user{email}=$opt_email;
$user{comment}=$opt_comment;
$user{gid}=$gid;

fatal("Cannot add user to users table! (user already exists?)\n" .
      db_errormsg()) if (add_user(\%user) < 0);

print "User $opt_user added succesfully.\n";
print "Remember to give user some rights with moduser command.\n"
	  if (($superuser ne 'true') and ($gid < 1));

exit(0);

# eof


