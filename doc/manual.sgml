<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.0//EN" [
<!ENTITY sauron-logo SYSTEM "sauron_tower_bare.eps" NDATA EPS>
<!ENTITY overview-pic SYSTEM "overview.eps" NDATA EPS>
<!ENTITY relations-pic SYSTEM "relations.eps" NDATA EPS>
<!ENTITY gpl SYSTEM "gpl.sgml">
<!ENTITY sql-tables SYSTEM "tables.sgml">
<!ENTITY form-new-server SYSTEM "form-new-server.sgml">
<!ENTITY form-edit-server SYSTEM "form-edit-server.sgml">
<!ENTITY form-new-zone SYSTEM "form-new-zone.sgml">
<!ENTITY form-edit-zone SYSTEM "form-edit-zone.sgml">
<!ENTITY form-new-host SYSTEM "form-new-host.sgml">
<!ENTITY form-edit-host SYSTEM "form-edit-host.sgml">
<!ENTITY form-search-hosts SYSTEM "form-search-hosts.sgml">
<!ENTITY form-edit-net SYSTEM "form-edit-net.sgml">
<!ENTITY command-reference SYSTEM "command-ref.sgml">
]>


<book id="sauron-manual">

  <bookinfo>
    <title>Sauron</>
    <subtitle>User Guide</>
    <date>$Date$</>
    <authorgroup>
      <author>
	<firstname>Timo</>
	<surname>Kokkonen</>
        <affiliation>
          <address><email>tjko@iki.fi</></>
        </affiliation>
      </author>
    </authorgroup>
    <pubdate>2003-03-05</>

    <copyright>
      <year>2003</>
      <holder>Timo Kokkonen</>
    </copyright>

    <revhistory>
      <revision>
        <revnumber>0.6</>
        <date>2003-03-05</>
        <authorinitials>tjko</>
        <revremark>Updated to cover new features in Sauron 0.6.x</>
      </revision>
      <revision>
        <revnumber>0.5</>
        <date>2003-02-21</>
        <authorinitials>tjko</>
        <revremark>First draft</>
      </revision>
    </revhistory>

    <abstract>
      <para>
        This manual describes Sauron, a free DNS &amp; DHCP management
        system. 
      </para>
    </abstract>

  </bookinfo>

  <preface>
    <title>Preface</>
    <para>
      This manual is designed to address user's questions about installing
      and using <application>Sauron</>, free DNS & DHCP management
      software.
    </para>
    <para>
      Listed below are the topics covered in this User Guide.
      <itemizedlist>
        <listitem>
          <para>
            Chapter 1: introduction to Sauron, and pointers to additional 
                       information about Sauron.
          </para>
        </listitem>
      <listitem>
          <para>
            Chapter 2: explains how to install and configure Sauron.
          </para>
       </listitem>
      <listitem>
          <para>
            Chapter 3: provides an overview of how to start using Sauron.
          </para>
       </listitem>
      <listitem>
          <para>
            Chapter 4: explains how to manage user accounts.
          </para>
       </listitem>
      <listitem>
          <para>
            Chapter 5: reference for Sauron web-based user interface.
          </para>
       </listitem>
      <listitem>
          <para>
            Chapter 6: reference for Sauron command-line utilities.
          </para>
       </listitem>

      </itemizedlist>
    </para>

  </preface>

  <toc>
  </toc>


  <chapter id="intro-chapter">
    <title>Introduction</>
    <para>
      Sauron is a scalable system for management of DNS and DHCP services.
      Sauron can dynamically generate complete DNS and DHCP configurations
      from a central SQL-database. Automatic generation of DNS 
      <quote>reverse</> zones (with support for smaller than C-class
      reverse delegations) is supported. Sauron comes with web interface
      and command-line interface. The web interface comes 
      with user/group based access controls for distributed management.
    </para>

    <section>
      <title>History of Sauron</>
      <para>
        Sauron was originally designed and written by Timo Kokkonen 
        at the Computing Center of University of Jyvaskyla. 
        In 1999, when work on Sauron was started, it was meant to provide 
        a simple web based interface for letting multiple users 
        simultaneously manage DNS zone files, but it has since
        grown into a full featured DNS & DHCP management software.
      </para>
      <para>
        Sauron is still under development, but it has been in production 
        use since early 2001, managing the campus area network (CAN) with 
        over 10,000 computers at University of Jyvaskyla, Finland.
      </para>
      <para>
        In January 2003, Sauron was publicly released under the GNU
        General Public License (<acronym>GPL</>).
      </para>
    </section>

    <section>
      <title>System Overview</>
      <para>
        Sauron is built around sauron <quote>back-end</> that is used by the
        command-line and web interfaces to access the data stored in a
        SQL-database (see <xref linkend="overview-fig">). 
        Sauron is able to dynamically generate
        complete DNS (ISC BIND) and DHCP (ISC DHCP) configurations based
        on the data stored in the SQL-database. Sauron is currently written
        almost completely in Perl using only standard perl modules and
        couple of additional modules from CPAN. Web interface is stand-alone
        CGI script and should work with almost any WWW server that supports
        CGI.
      </para>
      <para>
        Database is organized as follows; 
        a number of servers may be defined where each server may contain
        several zones. At server level there may be "global" definitions 
        for DNS &  DHCP settings and a Layer-2 network map (VLAN map),
        which is used generating necessary topology information for dhcpd. 
        Each server can have multiple (DNS) zones defined. Hosts belong to 
        a zone and may contain additional information (such as asset IDs) 
        in addition to DNS/DHCP information. 
      </para>
      <figure id="overview-fig"><title>System Overview</title>
	<graphic scale=75 fileref="overview.eps">
      </figure>

      <section>
      <title>Features</>
      <para>
      Some of the main features of Sauron include:
      <itemizedlist>
       <listitem><para>
        Generates complete BIND (DNS) configuration file set for 
        each server
       </para></listitem>
       <listitem><para>
        Generates complete dhcpd (ISC's DHCP) configuration file set for
        each server
       </para></listitem>
       <listitem><para>
        Automatically generates DNS <quote>reverse</> zones
       </para></listitem>
       <listitem><para>
        Supports smaller than class-C <quote>reverse</> zone delegations
       </para></listitem>
       <listitem><para>
        Dynamic host aliases (both CNAME and A record)
       </para></listitem>
       <listitem><para>
        Support for dynamic DHCP address pools with access controls
        (requires DHCP v3)
       </para></listitem>
       <listitem><para>
         DHCP fail-over support (requires DHCP v3)
       </para></listitem>
       <listitem><para>
         MX and WKS record templates for hosts
       </para></listitem>
       <listitem><para>
         Groups; hosts may be assigned into a group that defines common
         attributes for it
       </para></listitem>
       <listitem><para>
         Support for most of the standard DNS RRs (resource records)
       </para></listitem>
       <listitem><para>
         Support for automatic validation of generated DNS and DHCP
         configuration file sets
       </para></listitem>
      </itemizedlist>
      </para>
      </section>
    </section>


    <section>
      <title>Sauron Home Page</>
      <para>
	Currently Sauron homepage is located at:
	<ulink url="http://sauron.jyu.fi/">
	  <citetitle>http://sauron.jyu.fi/</>
	</ulink>
      </para>
    </section>

    <section>
      <title>Software Distribution Sites</>
      <para>
        Sauron can be downloaded from following sites:
        <simplelist type=vert columns=1>
	  <member>
	     <ulink url="http://sauron.jyu.fi/pub/sauron/">
              <citetitle>Primary Site (HTTP)</>
             </ulink>
          </member>
	  <member>
	     <ulink url="ftp://ftp.jyu.fi/pub/sauron/">
              <citetitle>Secondary Site (FTP)</>
             </ulink>
          </member>
	  <member>
	     <ulink url="http://ftp.jyu.fi/ftp/pub/sauron/">
              <citetitle>Secondary Site (HTTP)</>
             </ulink>
          </member>
        </simplelist>
      </para>
    </section>

    <section>
      <title>Mailing lists</>
      <para>
         <itemizedlist>
	  <listitem><para>
           <email>sauron-announce@lists.jyu.fi</> - new release
           announcements and other important messages (moderated)
          </para></listitem>
	  <listitem><para>
           <email>sauron-users@lists.jyu.fi</> - general discussion
           and help forum
          </para></listitem>
	  <listitem><para>
           <email>sauron-devel@lists.jyu.fi</> - development and
           bug tracking
          </para></listitem>
         </itemizedlist>
      </para>
      <para>
	 To subscribe any of these mailing lists, send  an empty e-mail to 
         <foreignphrase>&lt;list-name&gt;</>-request@lists.jyu.fi
         address with subject line <quote>subscribe</> 
         (where &lt;list-name&gt; is the name of the list you want 
         to subscribe).
         <informalexample>
	  <para>
          For example, to subscribe <email>sauron-users@lists.jyu.fi</>
          you would need to send following empty e-mail:
          </para>
	  <screen>
           To: sauron-users-request@lists.jyu.fi
           Subject: subscribe
          </screen>
	 </informalexample>
      </para>
    </section>


    <section>
      <title>Acknowledgements</>
      <para>
	Special thanks for following people, who have been very
	helpful to the development of Sauron:
      </para>
      <para>
        <simplelist type=vert columns=1>
	 <member>Teemu Lähteenmäki <email>tola@iki.fi</></>
	 <member>Riku Meskanen <email>mesrik@iki.fi</></>
	 <member>Otto J. Mäkelä <email>om@iki.fi</></>
        </simplelist>
      </para>
    </section>

    <section id="copyright">
      <title>Copyright Notice</>
      <para>
	Sauron is Copyright (C) 1999-2003 Timo Kokkonen.
      </para>
      <para>
	Sauron is Copyright (C) 1999-2003 Computing Center, 
                                          University of Jyvaskyla.
      </para>
      <para>
	This  program  is  free  software; you can redistribute it
	and/or modify it under the terms of the GNU General Public
	License  as  published  by  the  Free Software Foundation;
	either version 2 of the License, or (at your  option)  any
	later version.
      </para>
      <para>
	This  program  is distributed in the hope that it will be
	useful, but WITHOUT ANY WARRANTY; without even the implied
	warranty  of  MERCHANTABILITY  or FITNESS FOR A PARTICULAR
	PURPOSE.  See the GNU  General  Public  License  for  more
	details.
      </para>
      <para>
	You should have received a copy of the GNU General Public
	License along with this program; if not, write to the Free
	Software  Foundation,  Inc.,  675  Mass Ave, Cambridge, MA
	02139, USA.
      </para>
    </section>

  </chapter>


  <chapter id="installation">
    <title>Installation</>
    <para>
    This chapter covers the general installation process for Sauron.
    This includes software installation and initial system configuration.
    Make sure you have all the required programs installed, before
    starting to install Sauron.
    </para>

    <section id="system-requirements">
      <title>System Requirements</>
      <para>
        Sauron is developed under Linux and Solaris, but is should work pretty
        much on any *nix like OS (as long as you can get the required programs
        on your platform). Sauron is currently written entirely in Perl (with
        some supporting shell-scripts).
      </para>

      <section>
        <title>Required Programs</>
        <para>
        Following programs are needed to run Sauron.
        <itemizedlist>
	  <listitem><para>
            PostgreSQL v7.x or later (7.2.3 or newer recommended)
          </para></listitem>
	  <listitem><para>
            Perl 5 or later (at least 5.6 recommended)
          </para></listitem>
          <listitem><para>
            Perl modules (these can be found from CPAN):
            <itemizedlist>
	      <listitem><para>CGI v2.752 or later 
                              (older versions should work fine too)</></>
	      <listitem><para>Digest::MD5 v2.16 or later</></>
	      <listitem><para>Net::DNS v0.26 or later</></>
	      <listitem><para>Net::Netmask v1.9002 or later</></>
	      <listitem><para>Pg v1.9.0 or later (PostgreSQL interface)</></>
	    </itemizedlist>
          </para></listitem>
	  <listitem><para>
            Apache or any other WWW server that supports CGI
            (for WWW interface)
          </para></listitem>
        </itemizedlist>
        </para>
      </section>

      <section>
        <title>Related Programs</>
        <para>
        To use DNS & DHCP configurations generated by Sauron you will 
        also need 
        <ulink url="http://www.isc.org/">
          <citetitle>Internet Software Consortium's</>
        </ulink> DNS & DHCP programs.

        <itemizedlist>
          <listitem><para>BIND 8.2.x or later 
           (9.2.x or newer recommended)</></>
	  <listitem><para>DHCP v2 or later 
           (3.x or newer strongly recommended)</></>
        </itemizedlist>
        </para>
      </section>

    </section>

    <section>
      <title>Installing Sauron</>
      <para>
        Sauron is currently available as a source <quote>tarball</> as well
        as a RPM package (RPM package is made for RedHat Linux systems).
        Decide which version you want to use to install Sauron from and
        proceed to either <xref linkend="install-tgz"> or 
        <xref linkend="install-rpm">.
      </para>

      <section id="install-tgz">
        <title>Installing from the sources</title>
        <para>
        First step, when installing from the source archive
        is to unpack the tar file into a directory and change
        current directory to that directory. This can be
        done as follows:
        <screen>
        gunzip -c sauron-0.5.0.tar.gz | tar xvf -
        cd sauron-0.5.0
        </screen>
        </para>
        
        <para>
        Next step is to install Sauron from the sources. By default
        Sauron program files will be installed under 
        <filename class=directory>/usr/local/sauron</>,
        and configuration files under 
        <filename class=directory>/usr/local/etc/sauron</>. If you
        want to install Sauron under some other directories you need
        to specify 
        <parameter class=command>--prefix</> and
        <parameter class=command>--sysconfdir</> arguments when invoking 
        configure script. To install Sauron under default directories
        issue following commands:
        <screen>
        ./configure
        make
        make docs
        make install
        </screen>
        </para>

      </section>

      <section id="install-rpm">
        <title>Installing from the RPM</>
       <para>
       To install (or update) Sauron from RPM package you can simply
       install the package as follows:
       <screen>
       rpm -Uvh sauron-0.5.0-1.noarch.rpm
       </screen>
       </para>
      </section>

    </section>

    <section>
      <title>Sauron Configuration</>
      <para>
      Sauron configuration settings are stored in <filename>config</>
      file, which is usually located in
      <filename class=directory>/usr/local/etc/sauron/</>
      or in <filename class=directory>/etc/sauron/</> (if Sauron
      is installed from RPM). This configuration file is parsed
      actually as a Perl code, so it is possible to set the configuration
      variables conditionally if desired.
      </para>
      <para>
      Configuration file contains common configuration settings for
      all Sauron components (except browser.cgi which uses it's own
      configuration file <filename>config-browser</>). Here we cover
      only the basic settings that you need to set before using Sauron.
      For more advanced settings, see the configuration file where 
      all the advanced configuration options are documented.

      <variablelist><title>General Configuration Options</>
	<varlistentry><term>DB_CONNECT</>
         <listitem><para>
           Database connection parameters string. This defines the database
           to connect to, and optionally database username and password
           to use. See <xref linkend="db-config-sec">
           how to setup a database for Sauron. 
         </para>
         <para>
           To setup connection to a database named <database>sauron</>
           in localhost, you might want to set this variable to:
           <screen>
           "dbname=sauron user=foo password=bar"
           </screen>
           Or, if you're connecting to a database at remote computer:
           <screen>
           "host=remotehost port=5432 dbname=sauron user=foo password=bar"
           </screen>
         </para>
         <para>
           <table frame=all><title>Database Connection String Parameters</>
             <tgroup cols=3 align=left colsep=1 rowsep=1>
             <colspec colname=c1>
             <colspec colname=c2>
             <colspec colname=c3>
	     <thead>
             <row>
              <entry>Parameter</>
              <entry>Default value</>
              <entry>Description</>
             </row>
             </thead>
             <tbody>
             <row>
              <entry>host</><entry>localhost</>
              <entry>Hostname of the database server.</>
             </row>
             <row>
              <entry>port</><entry>5432</>
              <entry>Port to connect on database server.</>
             </row>
             <row>
              <entry>dbname</><entry>current user-id</>
              <entry>Database name to connect.</>
             </row>
             <row>
              <entry>user</><entry>current user-id</>
              <entry>Database username.</>
             </row>
             <row>
              <entry>password</><entry></>
              <entry>Password.</>
             </row>
             </tbody>
             </tgroup>
           </table>
		     
         </para></listitem>
        </varlistentry>

	<varlistentry><term>PROG_DIR</>
         <listitem><para>
           Base directory for Sauron installation. This should be
           set to the directory where program files where installed.
           Usually this is either 
           <filename class=directory>/usr/local/sauron</> or
           <filename class=directory>/opt/sauron</> (if installed from RPM).
         </para></listitem>
        </varlistentry>

	<varlistentry><term>LOG_DIR</>
         <listitem><para>
           Directory for log files. Currently only the web interface
           (<filename>sauron.cgi</>) uses this directory to write to 
           <filename>sauron.log</> file in this directory. 
           Remember to make sure that the <filename>saurno.cgi</> has
           permissions to write into this file.
         </para></listitem>
        </varlistentry>

	<varlistentry><term>SERVER_ID</>
         <listitem><para>
           Unique identifier for this Sauron installation. This identifier
           is used by the web interface to generate unique cookies names,
           so you can access several different Sauron web interfaces 
           simultaneously from your browser. This identifier is also displayed
           by the web interface; to help you to identify which Sauron web
           interface you're currently connected to. 
         </para></listitem>
        </varlistentry>

      </variablelist>
      </para>
    </section>

    <section id="db-config-sec">
      <title>Database Configuration</>
      <para>
      To use Sauron, you need to create a database for it in PostgreSQL.
      Unless you plan on restoring existing Sauron database from a database
      dump, you also need to setup necessary tables for Sauron to use.
      </para>

      <section>
      <title>Creating database for Sauron</>
      <para>
        Choose name for your database (for example: <filename>sauron</>)
        and create empty database in PostgreSQL using <application>createdb</>
        program.
        <screen>
        createdb sauron
        </screen>
      </para>
      <para>
        After creating the database, you may either restore existing Sauron
        database dump or start from <quote>scratch</> and create necessary
        tables for Sauron as described in following Sections.
      </para>
      </section>

      <section>
      <title>Initializing Database</>
      <para>
        Before using Sauron, you need to initialized the database. For this
        there is <command>createtables</> utility that is included
        with Sauron. To initialize the database, simply run following command
        in Sauron program directory:
        <screen>
        ./createtables
        </screen>
        This command will create all the necessary tables needed by Sauron.
        You can check that everything worked by issuing the following command:
        <screen>
        ./status
        </screen>
        This should produce output similar to following showing that the
        database connection works:
        <screen>
Sauron v0.5.0 status

Database connection:   OK
Database version:      1.0
CGI interface:         Enabled

No servers found in database!
        </screen>
      </para>
      <para>
        It is also recommended to check that the Perl modules in use
        meet the requirements (see <xref linkend="system-requirements">).
        This can be done by running <command>status</> command with 
        <option>--versions</> option:
        <screen>
        ./status --versions
        </screen> 
      </para>
      </section>

      <section>
      <title>Initializing Global Tables</>
      <para>
        Sauron has several global tables that contain data that is used
        by all servers stored in a Sauron database. These tables contain
        a table (<filename>ether_info</>) that contains mappings of
        <acronym>OUI</>'s to Manufacturers that is used to display
        the manufacturers of <acronym>NICs</> based on the
        <hardware>Ethernet</> <acronym>MAC</> address.
        There is also a table (<filename>root_servers</>) that contains
        global (default) root server information, and optionally also
        server specific root server information.
      </para>
 
      <para>
        To populate OUI (<filename>ether_info</>) table with the
        included files, issue following commands in the Sauron top-level
        directory:
        <screen>
        ./import-ethers contrib/Ethernet.txt
        ./import-ethers --force contrib/additional-ether-codes.txt
        </screen>
        You may also want to download <acronym>IEEE</>'s 
        up to date public list of OUIs from 
        <ulink url="http://standards.ieee.org/regauth/oui/index.shtml">
          <citetitle>IEEE's web site</></ulink>, and install it as follows:
        <screen>
        ./import-ethers oui.txt
        </screen>
      </para>
 
      <para>
        You should also add default root servers into <filename>root_servers</>
        table. This can be done as follows:
        <screen>
        ./import-roots default contrib/named.root
        </screen>
        NOTE! remember to check for newer version of this file at
        <ulink url="ftp://ftp.rs.internic.net/domain/">
          <citetitle>ftp.rs.internic.net</>
        </ulink>.
      </para>
      </section>

    </section>

    <section>
      <title>WWW Server Configuration</>
      <para>
        To be able to use Sauron's web interface you need to make
        <filename>sauron.cgi</> and <filename>browser.cgi</>
        (if you want to use the Sauron DNS browser) available through
        your WWW server. To do this you typically would either make symbolic
        links to these files or copy these files in your 
        <filename class=directory>cgi-bin</> directory. Note, if you're
        installing from the <acronym>RPM</> package, these symbolic links
        are created automatically, so you only need to check that your 
        web server configuration allow symlinks in your cgi-bin directory.

      </para> 
      <para>
          You should use your web server configuration and/or firewall
          to limit access to <filename>sauron.cgi</> and 
          <filename>browser.cgi</> CGI scripts only from the machines
          you need to access Sauron from.
      </para>

      <para>
         Sauron web interface uses several icons and images that are
         by default installed under the top-level Sauron directory.
         You need to make these available through your web server
         via <filename class=directory>/sauron/icons/</> directory
         (unless you're installing from the RPM which does this automatically
         for you).
         To do this you can create that directory under your
         WWW server root and then either make symbolic links or copy
         all the image files from 
         <filename class=directory>&lt;sauron top-level directory&gt;/icons/</>
         into this directory.
      </para>
    </section>

  </chapter>

  
  <chapter id="getting-started">
    <title>Getting Started</>
    <para>
      This chapter is intended as a brief overview of how to build a simple
      DNS & DHCP server configuration using Sauron. For those in hurry, 
      there is also small demonstration database that can be used to test 
      Sauron quickly (see <xref linkend="demo-db-sec">).
    </para>
    <para>
    </para>
    <section>
    <title>Creating Administrator Account</title>
    <para>
      First step before using Sauron is to create administrator account(s).
      Administrator accounts are normal user accounts that have superuser
      flag enabled. For adding accounts there is command-line utility
      <application>adduser</> that can be used to add user accounts either
      interactive or batch mode. To add administrator (superuser) account
      interactively, invoke <application>adduser</> with option
      <option>--superuser</>:
      <screen>
        ./adduser --superuser
      </screen>
      Here is sample output from <application>adduser</> program:
      <screen>
Enter username: admin
Enter group name (empty for none): 
Enter user description (full name): Administrator
Enter user email address: hostmaster@middle.earth
Enter optional user info: 
Enter account expiration date (dd-mm-yyyy, +&lt;n&gt;d, +&lt;n&gt;y) [none]: 
Enter password [JD!JqRGg]: 
           Username: admin
              Group: &lt;none&gt;
           Longname: Administrator
              email: hostmaster@middle.earth
            comment: 
         expiration: &lt;none&gt;
          superuser: true
Add this user [y/n]?y
User admin added successfully.
      </screen>
      Normal users accounts can be added interactively by starting 
      <application>adduser</> without any arguments. Difference between
      superuser accounts and normal user accounts is that normal accounts
      need to be granted permission to access/modify desired 
      servers/zones/hosts. See <xref linkend="account-management"> for
      more information about managing user accounts and privileges.
    </para>
    </section>

    <section>
    <title>Creating New Server</title>
    <para>
      Sauron can manage multiple servers, where each <quote>server</>
      is contains its own DNS & DHCP server configuration information.
      This allows single Sauron system to manage multiple DNS & DHCP
      servers. Normally each servers are completely separate from each
      other, but it is possible to generate <quote>slave</> servers that
      use another server as a master server, and inherit it's all master
      zones (as slave zones), and optionally slave server can also
      inherit master server's access controls (for DNS server).
    </para>
    <para>
      There are two ways to create a new server in Sauron. One is to
      import existing DNS & DHCP configuration into Sauron, for easier
      migration into use of Sauron. Another way is to start from
      <quote>scratch</> and create new server and zones interactively
      using Sauron's web interface. Following sections show example
      how to do this both ways (there is also section showing how to
      use the included demo database to take a quick look how Sauron
      works; <xref linkend="demo-db-sec">).
    </para>
      <section> 
      <title>Using Web Interface</>
      <para>
        First, login using the web interface as an administrator into Sauron.
        You should now be in <quote>Select server</> dialog, 
        with empty list of servers to choose from. Now select <quote>Add</>
        to add a new server. See <xref linkend="new-server-dialog"> for
        information of the fields used in this dialog.
      </para>

      <para>
        Next step is to define global DHCP server settings, by choosing
        <guimenuitem>Edit</> from <guimenu>Servers</> menu. Now you
        can add desired DHCP settings in the 
        <guimenuitem>Global DHCP Settings</> field, one setting per line
        without the semicolon (;) at the end of line. Here's some
        typical global DHCP settings:
        <screen>
        authoritative
        allow bootp
        use-host-decl-names on
        default-lease-time 7200
        max-lease-time 38400
        option domain-name-servers ns1.middle.earth,ns2.middle.earth
        option ntp-servers ntp1.middle.earth,ntp2.middle.earth
        </screen>
      </para>

      <para>
        After creating a server, it's time to add networks into 
        <guimenuitem>Networks</> table in <guimenu>Nets</> menu.
        Generate net for each network that has been delegated for
        your use (and you're generating <quote>reverse</> zones for).
        You should also generate subnets within these networks that
        describe your network topology. If your network is split
        up into <acronym>VLANs</>  / Layer-2 Networks (or 
        <quote>Shared Networks</> as DHCP calls them), add you necessary
        VLANs using <guimenuitem>Add vlan</> before, and assign each subnet
        into appropriate VLAN. It is also possible to create
        <quote>virtual subnets</> that are used only for access control
        purposes by setting <quote>DHCP</> setting for these subnets to
        false.
      </para>

      <para>
        Next step is to add the default zones (localhost and reverse
        zones for 0.0.0.0/8, 127.0.0.0/8, and 255.0.0.0/8) into the server.
        This can be done from <guimenu>Zones</> menu using
        <guimenuitem>Add Default Zones</>, which should produce following
        output:
        <screen>
Adding zone: localhost...OK (id=1)
Adding zone: 127.in-addr.arpa...OK (id=2)
Adding zone: 0.in-addr.arpa...OK (id=3)
Adding zone: 255.in-addr.arpa...OK (id=4)
        </screen>
      </para>

      <para>
        Now its time to add your zone(s) into the server. This can be
        done from <guimenu>Zones</> using the <guimenuitem>Add</> command.
        See <xref linkend="new-zone-dialog"> for description of the
        fields used in this dialog.
      
        After creating a zone, edit the zone by selecting <guimenuitem>Edit</>
        from <guimenu>Zones</> menu, and add Name server (<acronym>NS</>) 
        entries and other needed entries for the zone.
        See <xref linkend="edit-zone-dialog"> for description of the fields
        used in this dialog.
      </para>

      <para>
        Finally after creating the zone(s) you want. You may start adding
        hosts into your zones. Before adding hosts make sure you've
        selected correct server and zone (Note, you can save your current
        zone and server selection as defaults from <guimenu>Login</> menu
        using the <guimenuitem>Save Settings</> command). To add
        a new host simply select <guimenuitem>Add host</> from 
        <guimenu>Hosts</> menu. If you want to make a <quote>copy</> of
        existing host, first select the host and press <guibutton>Copy</>
        button. This will fill out the new host dialog with information
        from the current host.
        See <xref linkend="new-host-dialog"> for description of the fields
        used in this dialog.
      </para>

      <para>
        There are also templates and groups that you may define and use
        when adding/modifying hosts. To makes it easier to define or
        change  certain settings for large groups of hosts, by just modifying
        the related template or group. More information about these
        can be found in <xref linkend="templates-menu">.
      </para>
 
      </section>

      <section id="import-dns">
      <title>Using Existing DNS/DHCP Configuration</>
      <para>
        For importing existing BIND configuration files and existing
        DHCP configuration file there is <filename>import</> and
        <filename>import-dhcp</> utilities. These utilities can be used
        to import new server into existing Sauron database.
      </para>
      <para>
        First step is to import your existing BIND configuration into
        Sauron.  This can be done as follows:
        <screen>
        ./import ns1 /etc/named.conf
        </screen>
        Where import will read your BIND configuration from 
        <filename>named.conf</>. Import will read also master zone-files 
        from directories specified in <filename>named.conf</>. Use
        <option>--dir=&lt;directory&gt;</> to specify alternate location
        for zone-file if they're not located in the directories specified
        in <filename>named.conf</>.
      </para>
      <para>
        Since BIND configuration does not contain information about your
        network topology nor the hardware (Ethernet) addresses of hosts,
        you should also import your existing DHCP configuration file
        <filename>dhcpd.conf</> using <filename>import-dhcp</>.
        This can be done as follows:
        <screen>
        ./import-dhcp --global ns1 /etc/dhcpd.conf
        </screen>
        This will update hosts in the server <quote>ns1</> with
        information from dhcpd configuration file. Option <option>--global</>
        causes global dhcp settings to be imported into the server record.
      </para>
      </section>

      <section id="demo-db-sec">
      <title>Using Demonstration Database</title>
      <para>
        There is small demonstration database included with Sauron 
        distribution. This database is a dump of Sauron database that
        contains sample server, which demonstrates some features of Sauron.
      </para>
      <para>
        To use this database dump you need to create a new database in 
        PostgreSQL and restore this dump into it using <filename>psql</>
        utility. This can be done as follows (from the sauron top-level
        directory):
        <screen>
        cd test
        createdb sauron-demo
        psql sauron-demo -f sauron-demo.dump
        </screen>
        After creating the database you need to set DB_CONNECT variable
        in <filename>config</> file to connect to this database.
      </para>
      <para>
      This demonstration database has three user accounts already setup:
      <table>
      <title>Demo Database Accounts</>
      <tgroup cols=3 align=left colsep=1 rowsep=1>
      <thead> 
      <row><entry>account</><entry>password</><entry>description</></row>
      </thead>
      <tbody>
      <row><entry>admin</><entry>admin</><entry>sample administrator account</>
      </row>
      <row><entry>user1</><entry>user1</><entry>user with minimal rights</>
      </row>
      <row><entry>user2</><entry>user2</><entry>user with more rights</>
      </row>
      </tbody>
      </tgroup>
      </table>
      </para>
      
      </section>
    </section>

    <section id="sauron-sec">
    <title>Generating DNS & DHCP Configurations</title>
    <para>
      Generation of BIND and dhcpd configurations files is done using
      command-line utility <filename>sauron</>. Configuration files
      can be generated at the server where Sauron and PostgreSQL are installed,
      or Sauron software can be installed also in the actual DNS & DHCP
      server and configured to connect to PostgreSQL database over network
      (if connecting PostgreSQL over the network SSL connection 
      should be used).
    </para>
    <para> 
      To generate complete BIND configuration file set as well as dhcpd
      configuration file, following command could be used:
      <screen>
      ./sauron --bind --dhcp --updateserial ns1 /opt/ns/
      </screen>
      This will create configuration files for server <quote>ns1</>.
      Option <option>--updateserial</> forces the update of zone 
      <acronym>SOA</> serial numbers. Normally Sauron tries to detect
      if zone serial number update is necessary and update it only when
      needed, but this detection routine may sometimes fail, so for now
      it's recommended to use <option>--updateserial</> option.
    </para>
    <para>
      Sauron should always generate valid configuration files for BIND
      and dhcpd, but to be sure and automatically validate generated
      files, there is <option>--check</> option that causes <filename>sauron</>
      command to check generated files. For this to work you need to
      set specify the locations of <filename>dhcpd</>, 
      <filename>named-checkconf</>, and <filename>named-checkzone</> programs
      in Sauron configuration file. Here's an example for enabling
      <option>--check</> option to work in a RedHat Linux:
      <screen>
# set to enable dhcpd.conf validation from sauron
$SAURON_DHCP_CHK_PROG = '/usr/sbin/dhcpd';
$SAURON_DHCP_CHK_ARGS = '-q -t -cf';

# set to enable named.conf validation from sauron
$SAURON_NAMED_CHK_PROG = '/usr/sbin/named-checkconf';
$SAURON_NAMED_CHK_ARGS = '';

# set to enable zone file validation from sauron
$SAURON_ZONE_CHK_PROG = '/usr/sbin/named-checkzone';
$SAURON_ZONE_CHK_ARGS = '-q';
      </screen>
      It is also possible to tell <filename>sauron</> to send e-mail 
      notifications to users whose changes are in effect after new
      configuration files are put into use using the <option>--mail</>
      option. For this option to work you need to configure a mailer
      program for Sauron to use in configuration file. Here's example
      how to do this in a RedHat Linux:
      <screen>
# mailer configuration (set to enable email notifications)
$SAURON_MAILER = '/usr/sbin/sendmail';
$SAURON_MAILER_ARGS = '-t'; 
$SAURON_MAIL_FROM = 'postmaster@middle.earth'; 
      </screen>
      This configures Sauron to use <application>Sendmail</> for sending
      e-mail notifications, and messages will appear to come from
      <email>postmaster@middle.earth</email>.
    </para>
    <para>
      You can automate BIND & dhcpd configuration files generation using
      for example a simple shell script that is run periodically from
      <application>cron</>. But you should use <option>--check</> option
      when doing this to make sure you always end up with valid
      configuration files.
    </para>
    </section>
    
  </chapter>

  <chapter id="account-management">
  <title>Account Management</>
  <para>
    Currently only the Sauron's Web Interface uses user accounts 
    and privileges. A text-based interface (to be used via
    <acronym>SSH</> or locally) is planned and will use the same user
    accounts and privileges as the web interface. 
  </para>
  <para>
    There are two ways to assign privileges to users either directly setting
    privileges to a user or assigning user to a user group and then 
    setting privileges to that user group. It is recommended to use user
    groups to grant users privileges, since when there is large number
    of user accounts, it is much easier to modify permissions of a user
    group than having to modify each user's permission individually.
  </para>
  <warning>
  <para>
    There is no access control when using the command-line utilities. Thus,
    it may be necessary protect access to the Sauron database (in PostgreSQL)
    and configuration file <filename>config</> (if it contains password
    to access the database).
  </para>
  </warning>

  <section>
  <title>Managing User Accounts</>
  <para>
    For managing user accounts there are several command-line utilities:
    <filename>adduser</>, <filename>moduser</>, and <filename>deluser</>.
    Following sections show how to do basic administrative tasks using
    these utilities.
  </para>
    <section>
    <title>Creating User</>
    <para>
      User accounts are created using <filename>adduser</> utility.
      This utility allows adding user accounts either interactively or
      in batch mode by specifying all the required information on 
      command-line. Following example shows how to add normal user
      account interactively (see <xref linkend="adduser-cmd"> for
      information how to use this command in non-interactive mode).
      To add new user into Sauron simply run <filename>adduser</> command
      from Sauron top-level directory:
      <screen>
        ./adduser
      </screen>
      When started without any arguments (or without <option>--user</> and
      <option>--passwd</> option), interactive mode is started. 
      Below is an example session how to add an account:
      <screen>
Enter username: pippin
Enter group name (empty for none): hobbits
Enter user description (full name): Peregrin Took
Enter user email address: pippin@shire.middle.earth
Enter optional user info: 
Enter account expiration date (dd-mm-yyyy, +&lt;n&gt;d, +&lt;n&gt;y) [none]: 
Enter password [UtH4RCda]: 
           Username: pippin
              Group: hobbits (GID=1)
           Longname: Peregrin Took
              email: pippin@shire.middle.earth
            comment: 
         expiration: &lt;none&gt;
          superuser: false
Add this user [y/n]?y
User pippin added successfully.
      </screen>
      When creating account and not setting group for that account,
      <filename>adduser</> will remind that some privileges should be
      set for the user, before account can be used. This is not the case
      when assigning user to a group, since it's assumed that group contains
      necessary privileges for the account. 
      See <xref linkend="priviliges-sec"> for more information about
      user privileges and how to modify them.
    </para>
    </section>

    <section id="priviliges-sec">
    <title>Setting Privileges</>
    <para>
      Accounts must have some privileges (except superuser/administrator
      accounts) for them to be useful. Privileges can be assigned directly
      to the user account using <filename>moduser</> utility or indirectly
      to a group using <filename>modgroup</> utility. 
    </para>
    <para>
      Typically user (or group) is assigned one or more <quote>server</> 
      privileges that grant user read-only access into those server(s).
      Then user is assigned <quote>zone</> privileges that grant
      user access into all hosts inside certain zone(s). If needed, user's
      access into all hosts inside the zone(s) user has write access can
      be further limited by assigning restrictive privileges to limit users 
      access to only a subset of hosts inside the zone(s). For this there
      are rules to limit access by hostname (regexp) or by IP number
      (either by network/subnet or by IP-mask).
      See <xref linkend="privilige-table"> for complete list of available
      user/group privileges.
    </para>
    <table frame=all id="privilige-table"><title>Account/Group Privileges</>
      <tgroup cols=4>
      <thead>
        <row>
          <entry>Type</><entry>Target</><entry>Description</><entry>Value</>
        </row>
      </thead>
      <tbody>
        <row>
           <entry>Server</>
           <entry>server ID</>
           <entry>Controls the access to a server and all zones inside
                  the server.</>
           <entry>R=read access, RW=read/write access,
                  RWX=read/write access (with less restrictions)</>
        </row>
        <row>
           <entry>Zone</>
           <entry>zone ID</>
           <entry>Controls the access to a zone.</>
           <entry>R=read access, RW=read/write access, 
                  RWX=read/write access (with less restrictions)</>
        </row>
        <row>
           <entry>Net</>
           <entry>net ID</>
           <entry>Limits users ability to use only IP addresses
                  within <quote>auto assign ranges</> of
                  the networks/subnets listed by the Net rules.</>
           <entry></>
        </row>
        <row>
           <entry>IP mask</>
           <entry></>
           <entry>Limits users ability to use only IP addresses
                  to those matching the IP-mask</>
           <entry>IP-mask (for example: 192.168.1-10.*</>
        </row>
        <row>
           <entry>Hostname mask</>
           <entry></>
           <entry>Limits user to be able to modify only
                  hosts with domainname matching any
                  of Hostname mask rules.</>
           <entry>regular expression (for example: ^\.math$)</>
        </row>
        <row>
           <entry>Authorization Level</>
           <entry></>
           <entry>Defines user's authorization level.
                  This can be used to control users access
                  into templates/groups, and also to control
                  how much information about networks is
                  displayed to the user.</>
           <entry>authorization level (0-999, 0=default)</>
        </row>
        <row>
           <entry>Host Expiration Limit</>
           <entry></>
           <entry>If defined, user can only create host entries
                  that expire in n days or sooner.</> 
           <entry>expiration limit (in days)</>
        </row>
        <row>
           <entry>Default Department</>
           <entry></>
           <entry>Default Department field value for new hosts.</>
           <entry>Department Name</>
        </row>
      </tbody>
      </tgroup>
    </table>
    <para>
      In addition to modifying the user account itself, <filename>moduser</>
      utility can also be used to modify user privileges. To add privileges
      interactively for given account, just invoke <filename>moduser</> with
      <option>--add</> option. For example:
      <screen>
      ./moduser pippin --add
      </screen>
      After adding privileges to a user, <filename>moduser</> utility can
      be also used to display user's current privileges by giving only
      a username as argument. For example:
      <screen>
      ./moduser pippin
      </screen>
      This should produce output similar to below displaying account
      details and privileges.
      <screen>
           Username: pippin (id=2)
           longname: Peregrin Took
              email: pippin@shire.middle.earth
               info: 
          superuser: No
              group: hobbits (gid=1)
      passwd status: valid (CRYPT)
         last login: 
 account expiration: &lt;never&gt;
    account created: Sat Feb 15 00:18:40 2003 by tjko    
      last modified: &lt;never&gt;

ID     Type     Ref.                      Mode
------ -------- ------------------------- --------------------------------
[User privileges]
3      hostname \.shire$                  (hostname constraint)

[Group (hobbits) privileges]
1      server   test                      R
2      zone     test:middle.earth         RW
      </screen>
    </para>	
    </section>

    <section>
    <title>Removing User</>
    <para>
      User account can be removed using <filename>deluser</> utility. This
      utility works interactively when started without any arguments. To
      remove user(s) non-interactively use <option>--user=&lt;username&gt;</>
    </para>
    <para>
      To remove user account interactively, simply start <filename>deluser</>
      without any arguments from Sauron top-level directory:
      <screen>
      ./deluser
      </screen>
    </para>
    </section>

    <section>
    <title>Disabling User Temporarily</>
    <para>
      It is also possible to disable (lock) user accounts without actually
      removing them, using <filename>moduser</> utility with <option>--lock</>
      option.
    </para>
    <para>
      Locking user account <quote>pippin</>, issue following command from
      Sauron top-level directory:
      <screen>
      ./moduser pippin --lock
      </screen>
    </para>
    </section>

    <section>
    <title>Listing Users</>
    <para>
      To list all users in Sauron database, use <filename>moduser</> command
      with <option>--list</> option. This will list all the users as
      well as user's group, name, and email information. This can be done
      from Sauron top-level directory as follows:
      <screen>
      ./moduser --list
      </screen>
    </para>
    </section>
  </section>

  <section>
  <title>Managing User Groups</>
  <para>
    User groups are meant to ease the user privilege management, by allowing
    user privileges to be set for a user group and then user can be assigned
    to a desired user group. 
    User inherits all the privileges from the group she
    belongs to. User can still have user specific privileges defined, even
    if user belongs to a group. User's actual privileges are combination
    of user specific and group based privileges.
  </para>
    <section>
    <title>Creating Group</>
    <para>
      User groups can be created using <filename>addgroup</> utility. 
      To add a user group interactively start <filename>addgroup</> program
      from Sauron top-level directory as follows:
    <screen>
      ./addgroup
    </screen>
       Here is example how to add a group named <quote>hobbits</>:
    <screen>
Enter group name: hobbits
Enter group description: Shire Hobbits
         Groupname: hobbits
         Description: Shire Hobbits
Add this group [y/n]?y
Group hobbits added successfully.
    </screen>
       After creating a new group, it should be assigned some privileges
       as described in <xref linkend="group-priviliges-sec">.
    </para>
    </section>

    <section id="group-priviliges-sec">
    <title>Setting Group Privileges</>
    <para>
      User groups (like User accounts) must have some privileges assigned
      to them for them to be useful. Privileges can be assigned directly
      to the user group using <filename>modgroup</> utility.
      Privileges that can be set to a user group are same as the privileges
      for a user. For more information about privileges see
      <xref linkend="priviliges-sec">.
    </para>
    <para>
      To add privileges for a user group interactively, start 
      <filename>modgroup</> utility with the <option>--add</> option.
      This can be done as follows from the Sauron top-level directory:
      <screen>
      ./modgroup hobbits --add
      </screen>
      After adding desired privileges to the group, <filename>modgroup</>
      utility can also be used to display group's privileges by starting
      it with only the group name as argument.
      <screen> 
      ./modgroup hobbits
      </screen>
      This should produce output similar to following:
      <screen>
 Groupname: hobbits (id=1)
   Comment: Shire Hobbits

ID     Type     Ref.                      Mode
------ -------- ------------------------- --------------------------------
1      server   test                      R
2      zone     test:middle.earth         RW
      </screen>
    </para>
    </section>

    <section>
    <title>Removing Group</>
    <para>
      User group can be removed using <filename>delgroup</> utility. This
      utility works interactively when started without any arguments. To
      remove user(s) non-interactively use <option>--group=&lt;groupname&gt;</>
    </para>
    <para>
      To remove user group interactively, simply start <filename>delgroup</>
      without any arguments from Sauron top-level directory:
      <screen>
      ./delgroup
      </screen>
    </para>
    </section>
  </section>

  <section>
  <title>External User Authentication</>
  <para>
    Normally users are authenticated against encrypted passwords stored
    into <filename>users</> table in Sauron database. Sauron currently
    uses by default standard Unix passwords. 
    However, it is possible to use external authentication program for
    user authentication. Which makes it possible to authenticate users
    against almost any service.
  </para>
  <para>
    To enable external user authentication, <varname>SAURON_AUTH_PROG</> in
    variable in Sauron configuration file must be set to point to external 
    authentication script or program.
  </para>
  <para>
    A sample script (<filename>kerberos-auth</>) for authenticating against 
    a Kerberos KDC is included in the <filename class=directory>contrib/</>
    directory. 
  </para>
  <para>
    If <varname>SAURON_AUTH_PROG</> is set in the configuration file, 
    Sauron will run the authentication program every time user is 
    authenticated. Authentication program is expected to read one
    line from standard input that is in following format:
    <screen> 
    username password
    </screen>
    Authentication program should then authenticate the user using the
    given username and password, and return with exit code 0 (zero) if 
    authentication was successful. Otherwise a non-zero exit code should 
    be used.
  </para>
  </section>

  </chapter>


  <chapter id="web-interface">
    <title>Web Interface</>
    <para>
      Web based user interface for Sauron is implemented as 
      a single <acronym>CGI</> script (<filename>sauron.cgi</>).
      To use this script WWW server software that supports 
      CGI programs is needed. Currently this interface is developed
      and tested using <application>Apache</>, but it should work
      with any WWW server software, as long as it has support for CGIs.
    </para>
    <para>
      It is recommended to setup your WWW server to use <acronym>HTTPS</>
      and only allow access to the <filename>sauron.cgi</> CGI script
      using encrypted <acronym>HTTPS</> connection. If your WWW server
      supports both unencrypted (<acronym>HTTP</>) and encrypted
      (<acronym>HTTPS</>) connections, it is recommended to setup
      a separate <quote>cgi-bin</> directory for <acronym>HTTPS</>
      connections and place <filename>sauron.cgi</> (or symbolic
      link to it) only in that directory.
    </para>
    <para> 
      Although <filename>sauron.cgi</> has it's own access control 
      mechanism, it is recommended to further improve security 
      by restricting access
      to the web interface for only the hosts that need access to the
      Sauron using the WWW server configuration and/or a firewall.
    </para>
    <para> 
      Sauron's web interface doesn't use JavaScript, only standard 
      <acronym>HTML</> is used. Goal is to keep the web interface
      lightweight and usable by all browsers (graphical as well as
      text-based). 
    </para>
    <para>
      For session tracking <filename>sauron.cgi</> uses cookies.
      Each generated cookie contains only a <acronym>MD5</> hash of
      user's session identifier and has maximum life of a week.
      Normally the cookie is deleted when user logs out. Cookies are only
      sent back to the issuing server. Sauron supports the use of
      <quote>secure cookies</> via configuration file setting
      <varname>SAURON_SECURE_COOKIES</> (this is not enabled by default
      since some buggy browsers don't handle secure cookies correctly).
    </para>

    <section id="servers-menu">
    <title>Servers Menu</>
    <para>
      <guimenu>Servers</> menu provides commands for creating and
      modifying servers for administrator. For normal user it only
      provides server selection command for selecting the active
      server.
    </para>
    
    <section><title>Show Current</>
    <para>
    <guimenuitem>Show Current</> command displays the currently selected
    server information. It is default command when entering 
    <guimenu>Servers</> menu.
    </para>
    </section>

    <section><title>Select</>
    <para>
    <guimenuitem>Select</> command displays list of available servers for
    selecting active server. For normal user's this list will include
    only the servers user has at least read access to.
    </para>
    </section>

    <section><title>Add</>
    <para>
    <guimenuitem>Add</> command is used to create a new server. This
    option is available only for administrator. 
    See <xref linkend="new-server-dialog"> for descriptions of the
    fields used in the command dialog.
    
    &form-new-server;
    </para>
    </section>

    <section><title>Delete</>
    <para>
    <guimenuitem>Delete</> command allows removal of a server.
    This command should be used with caution, since it will remove the
    entire server from the database.
    This command is available only for administrator.
    </para>
    </section>

    <section><title>Edit</>
    <para>
    <guimenuitem>Edit</> command is used to edit existing server. This
    option is available only for administrator. 
    See <xref linkend="edit-server-dialog"> for descriptions of the
    fields used in the command dialog.
    
    &form-edit-server;
    </para>
    </section>

    </section>


    <section id="zones-menu">
    <title>Zones Menu</>
    <para>
      <guimenu>Zones</guimenu> menu contains commands for creating and
      modifying zones for administrator. For normal user it only
      provides zone selection command for selecting the active zone.
    </para>
 
    <section><title>Show Current</>
    <para>
    <guimenuitem>Show Current</> command displays the currently selected
    zone information. It is default command when entering 
    <guimenu>Zones</> menu. Name of the currently selected zone can 
    be seen on the left side of the screen in 
    <quote>Current selections</> box.
    </para>
    </section>

    <section><title>Show Pending</>
    <para>
    <guimenuitem>Show Pending</> command displays list of pending changes
    for hosts in this zone. This list currently displays all new
    or modified hosts (or aliases) since DNS configuration was last
    time generated. 
    </para>
    <para> 
    Also when viewing a host record, there is word PENDING at the end of
    the <quote>Record created</> or <quote>Last modified</> fields
    if changes to this record are not yet in effect.
    </para>
    </section>

    <section><title>Select</>
    <para>
    <guimenuitem>Select</> command displays list of available zones 
    in current server for selecting active zone.
    </para>
    </section>

    <section><title>Add</>
    <para>
    <guimenuitem>Add</> command is used to create a new zone. This
    command is only available for administrator. 
    See <xref linkend="new-zone-dialog"> for descriptions of the
    fields used in the command dialog.
    
    &form-new-zone;
    </para>
    </section>

    <section><title>Add Default Zones</>
    <para>
    <guimenuitem>Add Default Zones</> command is used to automatically
    add the standard zones for normal DNS server. This command will try
    to add following zones into current server:
    <screen>
    localhost
    127.in-addr.arpa
    0.in-addr.arpa
    255.in-arrd.arpa
    </screen>
    This command is only available for administrator. 
    </para>
    </section>

    <section><title>Copy</>
    <para>
    <guimenuitem>Copy</> command copies entire zone (including all the
    hosts in a master zone) under new name. This option can be used
    to use existing zone as a template when creating new zones.
    This command is available only for administrator.
    </para>
    </section>

    <section><title>Delete</>
    <para>
    <guimenuitem>Delete</> command allows removal of a zone.
    This command should be used with caution, since it will remove the
    entire zone from the database.
    This command is available only for administrator.
    </para>
    </section>

    <section><title>Edit</>
    <para>
    <guimenuitem>Edit</> command is used to edit existing zone. This
    command is only available for administrator. 
    See <xref linkend="edit-zone-dialog"> for descriptions of the
    fields used in the command dialog.
    
    &form-edit-zone;
    </para>
    </section>

    </section>


    <section id="hosts-menu">
    <title>Hosts Menu</>
    <para>
      <guimenu>Hosts</> menu contains commands for creating and modifying
      hosts. In addition, this menu provides the search commands for
      searching hosts within a zone.
    </para>
    <para>
      Most of the host specific commands are not in the <guimenu>Hosts</>
      menu itself, but are displayed as buttons when user views a host record.
      Some of these buttons such as <guibutton>Edit</> or 
      <guibutton>Delete</> are only available when user has privileges to
      make modifications to hosts in that zone.
    </para>
      <section><title>Search</>
      <para>
        <guimenuitem>Search</> command is the default command when entering
        into <guimenu>Hosts</> menu. This command provides powerful
        search engine for hosts within current zone. 
        See <xref linkend="search-hosts-dialog"> for descriptions of the
        fields used in the command dialog.

        &form-search-hosts;
      </para>
      </section>

      <section><title>Last Search</>
      <para>
        <guimenuitem>Last Search</> command performs the previous search 
        again. This provides a quick way to redo a search you did earlier.
      </para>
      </section>

      <section><title>Add host</>
      <para>
        <guimenuitem>Add host</> command is used to create a host.
        This command displays slightly different dialog for administrators
        or users with <quote>RWX</> access to the zone than normal
        users who will get more restrictive dialog.
        See <xref linkend="new-host-dialog"> for descriptions of the
        fields used in the command dialog.
    
        &form-new-host;
      </para>
      </section>

      <section><title>Edit (button)</>
      <para>
        <guibutton>Edit</> button is used to modify existing host.
        This button can only be used by normal user if she has necessary
        privileges to make modifications to the host.
        See <xref linkend="edit-host-dialog"> for description of the
        fields used in this dialog.
        
        &form-edit-host;
      </para>
      </section>

      <section><title>Delete (button)</>
      <para>
        <guibutton>Delete</> button is used to delete a host.
        This button can only be used by normal user if she has necessary
        privileges to make modifications to the host. If a host
        has dynamic aliases that point to it those aliases are
        also automatically removed when the host is deleted.
      </para>
      </section>
 
      <section><title>Copy (button)</>
      <para>
        <guibutton>Copy</> button can be used to <quote>copy</>
        a host easily. This button will take the information from the
        current host and use this information to pre-fill 
        <guimenuitem>Add host</> command dialog. If hostname contains
        number it is incremented, otherwise number two (2) is appended to
        the end of the hostname.
      </para>
      </section>

      <section><title>Move (button)</>
      <para>
        <guibutton>Move</> button is used to move a host into a new
        subnet. After selecting new subnet for this host, next
        available IP address within the auto assign address range of that
        network is suggested as new IP address for the host. 
        This button can only be used by normal user if she has necessary
        privileges to make modifications to the host.
      </para>
      </section>

      <section><title>Alias (button)</>
      <para>
        <guibutton>Alias</> button is used to add a dynamic
        (CNAME or A record) alias for a host.
        This button can only be used by normal user if she has necessary
        privileges to make modifications to the host.
      </para>
      </section>

      <section><title>Add alias</>
      <para>
        <guimenuitem>Add alias</> command is used to add a static
        (CNAME) alias. This command is meant for adding static
        <quote>out-of-zone</> aliases only. Normally aliases should
        be added using <guibutton>Alias</> button, which will create a dynamic
        alias for that host.

        This command is available for administrator and users with
        <quote>RWX</> access to the zone.
      </para>
      </section>

      <section><title>Add MX entry</>
      <para>
        <guimenuitem>Add MX entry</> command is used to add 
        plain MX record (without A records or anything). 

        This command is available for administrator and users with
        <quote>RWX</> access to the zone.
      </para>
      </section>

      <section><title>Add delegation</>
      <para>
        <guimenuitem>Add delegation</> command is used to add 
        a zone delegation (NS records).
        This command is available for administrator and users with
        <quote>RWX</> access to the zone.
      </para>
      <para>
	When making delegations, remember to only use the subdomain's
        name as the name of delegation (do not enter FQDN of the delegated
        zone, but leave out the current zone's name from the end).
      </para>
      <para>
        It is possible to add smaller than <quote>class-C</> delegations
        for reverse zones. For example to delegate reverses for IP
        numbers 10.10.41.0-63, you could add following delegation:
        <quote>0-63.41</> in zone 10.10.in-addr.arpa. Note,
        currently all reverse delegations has to map into a CIDR blocks.
      </para>
      </section>

      <section><title>Add glue rec.</>
      <para>
        <guimenuitem>Add glue rec.</> command is used to add 
        glue records that are sometimes required for delegations
        where one ore more delegated zone's name servers are within
        that zone.

        This command is available for administrator and users with
        <quote>RWX</> access to the zone.
      </para>
      </section>

      <section><title>Add DHCP entry</>
      <para>
        <guimenuitem>Add DHCP entry</> command is used to add 
        a <quote>host</> entry that will only appear in DHCP
        configuration, but not in DNS configuration.

        This command is available for administrator and users with
        <quote>RWX</> access to the zone.
      </para>
      </section>

      <section><title>Add SRV rec.</>
      <para>
        <guimenuitem>Add SRV rec.</> command is used to add 
        a SRV records.

        This command is available for administrator and users with
        <quote>RWX</> access to the zone.
      </para>
      </section>

      <section><title>Add reservation</>
      <para>
        <guimenuitem>Add reservation</> command is used to add 
        a host reservation. Host reservations can be used to reserve
        hostnames and IP numbers for future use.
      </para>
      </section>

      <section><title>Network Settings (button)</>
      <para>
        <guibutton>Network Settings</> button displays network
        settings for selected host. This will include IP address,
        netmask, network address, broadcast address, and
        default gateway for the host.
      </para>
      </section>

      <section><title>History (button)</>
      <para>
        <guibutton>History</> button displays history of this host
        record. This will include information like when the record
        was created, and when it was modified and by whom.
        This option is available for users who by default have authorization
        level of 1 or higher (this can be controlled via variable
        <varname>ALEVEL_HISTORY</> in configuration file).
      </para>
      </section>

      <section><title>Ping (button)</>
      <para>
        <guibutton>Ping</> button allows user to run <quote>ping</>
        command against the selected host.
        This option is only available when it is explicitly enabled
        in configuration file and user has at least the required
        authorization level.
      </para>
      </section>

      <section><title>Traceroute (button)</>
      <para>
        <guibutton>Traceroute</> button allows user to 
        run <quote>traceroute</> command against the selected host.
        This option is only available when it is explicitly enabled
        in configuration file and user has at least the required
        authorization level.
      </para>
      </section>

    </section>

    <section id="templates-menu">
    <title>Templates Menu</>
    <para>
      <guimenu>Templates</> menu contains commands for creating and modifying
      templates. Only <quote>show</> commands under this menu are available
      for normal users. 
    </para>
    <para>
      Templates are used by hosts, they can be used to specify 
      common MX, WKS, or HINFO records for groups of hosts. 
      Normal users can only use templates that have same or lover
      privilege level than the user has.
    </para>

      <section><title>Show MX</>
      <para>
        <guimenuitem>Show MX</> command displays list of MX templates
        defined for this zone. To view specific MX template click on 
        it's name. 
        To edit or delete a MX template use <guibutton>Edit</> or
        <guibutton>Delete</> buttons from the bottom of the screen
        when viewing a template.
      </para>
      </section>

      <section><title>Show WKS</>
      <para>
        <guimenuitem>Show WKS</> command displays list of WKS templates
        defined for this server. To view specific WKS template click on 
        it's name. 
        To edit or delete a WKS template use <guibutton>Edit</> or
        <guibutton>Delete</> buttons from the bottom of the screen
        when viewing a template.
      </para>
      </section>

      <section><title>Show HINFO</>
      <para>
        <guimenuitem>Show HINFO</> command displays list of HINFO templates
        defined for this Sauron installation. 
        To view specific HINFO template click on it's name. 
        To edit or delete a HINFO template use <guibutton>Edit</> or
        <guibutton>Delete</> buttons from the bottom of the screen
        when viewing a template.
      </para>
      </section>

      <section><title>Add MX</>
      <para>
        <guimenuitem>Add MX</> command is used to create a new 
        MX template for selected zone.
        This command is only available for administrator.
      </para>
      </section>

      <section><title>Add WKS</>
      <para>
        <guimenuitem>Add WKS</> command is used to create a new 
        WMX template for selected server.
        This command is only available for administrator.
      </para>
      </section>

      <section><title>Add HINFO</>
      <para>
        <guimenuitem>Add HINFO</> command is used to create a new 
        HINFO template. These templates are global and available
        to all servers in this database (Sauron installation).
        This command is only available for administrator.
      </para>
      </section>

    </section>

    <section id="groups-menu">
    <title>Groups Menu</>
    <para>
      <guimenu>Groups</> menu contains commands for creating and modifying
      (host) groups. Normal users can only list and view group details;
      all other commands are for administrator only.
    </para>
    <para>
      Groups are used by hosts; they are used to specify common
      attributes for hosts. 
      Normal users can only use groups that have same or lover
      privilege level than the user has.
      There are currently three different types of groups.
      <variablelist><title>Group Types</>
        <varlistentry>
          <term>Normal</>
          <listitem><para>
            Normal group is used to specify common DHCP and PRINTER
            entries for hosts.
          </para></listitem>
        </varlistentry>
        <varlistentry>
          <term>DHCP class</>
          <listitem><para>
            This group is like normal group, but in DHCP configuration
            a class named after this group will be created and all
            hosts in this group will be <quote>subclassed</> into that
            class. This class can be used for example to allow only
            hosts in this group to use certain dynamic address pool.
          </para></listitem>
        </varlistentry>
        <varlistentry>
          <term>Dynamic Address Pool</>
          <listitem><para>
            This group is used only for hosts (IPs) that belong to a certain
            IP address pool for a DHCP server. For each dynamic address pool
            for DHCP server, group of host entries that belong to this group
            should be created (IP addresses of these hosts don't 
            necessarily have to be successive, but for each group a separate
            pool statement will be created in <filename>dhcpd.conf</>).
            When generating DHCP configuration, 
            dynamic address pools are automatically
            generated for each group of this type. DHCP entries set
            for this group are put inside <quote>pool</> declaration
            in <filename>dhcpd.conf</> (these can be used to deny/allow
            certain classes of hosts to use this pool).
          </para></listitem>
        </varlistentry>
      </variablelist>
    </para>
   
      <section><title>Show Groups</>
      <para>
        <guimenuitem>Show Groups</> command displays list of (host) groups
        defined for active server.
        To view details about a specific group, just click on it's name. 
        To edit or delete a group use <guibutton>Edit</> or
        <guibutton>Delete</> buttons from the bottom of the screen
        when viewing a template.
      </para>
      </section>

      <section><title>Add</>
      <para> 
        <guimenuitem>Add</> command is used to create new (host) group
        for currently active server.
        This command is only available for administrator.
      </para>
      </section>

    </section>

    <section id="nets-menu">
    <title>Nets Menu</>
    <para>
      <guimenu>Nets</> menu contains commands for managing networks and
      <acronym>VLANs</> (Layer-2 networks). Normal user can only see
      list of networks that have lower or same privilege level set than
      the user has. VLAN information is by default visible only for
      users with privilege level 5 or above (this can be controlled
      via <varname>ALEVEL_VLANS</> variable in configuration file).
    </para>
    <para>
      Networks are divided into two types <quote>Net</> and <quote>Subnet</>.
      Where <quote>Net</> is used for networks that are delegated 
      for your use (and you generate reverse zones for). <quote>Subnet</>
      is used for networks (subnets) within these <quote>Nets</> (networks).
      This information is used (along with VLAN information) to generate
      network topology for DHCP configuration.
    </para>
    <para>
      VLANs are used to describe the <quote>Layer-2 network</> topology
      of your network. Each network can be assigned to one VLAN. All
      networks that don't have VLAN set are part of virtual VLAN
      called <quote>CHAOS</> (normal VLAN names are always lower case).
    </para>

      <section><title>Networks</>
      <para>
        <guimenuitem>Networks</> command lists all the networks that
        are defined for active server. To view details of a network, just
        click on the network. To edit or delete selected network use
        <guibutton>Edit</> or <guibutton>Delete</> buttons. For information
        about selected network use <guibutton>Net Info</> button that 
        displays technical information about given network and map
        of IPs currently in use. 
      </para>
      </section>

      <section><title>Add net</>
      <para>
        <guimenuitem>Add net</> command is used to create a new 
        <quote>Net</> (network) for active server. This should be used
        only for networks that are delegated for your use.
        This command is only available for administrator.
      </para>
      </section>

      <section><title>Add subnet</>
      <para>
        <guimenuitem>Add subnet</> command is used to create a new 
        <quote>Subnet</> for active server. This should be used
        for all subnets within your official networks.
        This command is only available for administrator.
      </para>
      </section>

      <section><title>Edit (button)</>
      <para>
        <guibutton>Edit</> button is used to modify existing
        network. 
        See <xref linkend="edit-net-dialog"> for information about
        fields used in this dialog.
        This button is only available for administrator when
        viewing network details.

        &form-edit-net;
      </para>
      </section>

      <section><title>VLANs</>
      <para>
        <guimenuitem>VLANs</> command lists all VLANs (Layer-2 networks)
        that are defined for active server. To view details of a VLAN, just
        click on the network. To edit or delete selected network use
        <guibutton>Edit</> or <guibutton>Delete</> buttons.
        This command is only available for users with sufficiently high
        authorization level.
      </para>
      </section>

      <section><title>Add vlan</>
      <para>
        <guimenuitem>Add vlan</> command is used to create a new VLAN
        (Layer-2 network) entry for active server.
        This command is only available for administrator.
      </para>
      </section>

    </section>

    <section id="login-menu">
    <title>Login Menu</>
    <para>
      <guimenu>Login</> menu contains miscellaneous commands that
      mainly provide commands to tune user account settings, and display
      information about the web interface itself.
    </para>
     
      <section><title>User Info</>
      <para> 
        <guimenuitem>User Info</> command displays general information
        about current user's account and user privileges (permissions).
        See <xref linkend="privilige-table"> for description about 
        user privileges.
      </para>
      </section>

      <section><title>Who</>
      <para> 
        <guimenuitem>Who</> command displays list of currently 
        logged on users. This list includes username, user's full
        name, host where user coming from, when user logged in, and
        how long user has been idle.
      </para>
      </section>

      <section><title>News (motd)</>
      <para> 
        <guimenuitem>News (motd)</> command displays all
        system news (or message of day) messages. When users login
        they will see latest three news messages automatically.
      </para>
      </section>

      <section><title>Login</>
      <para> 
        <guimenuitem>Login</> command allows user to login
        again using different user account.
      </para>
      </section>

      <section><title>Logout</>
      <para> 
        <guimenuitem>Login</> command allows user to logout
        from the system. This will also try to erase session cookie
        from user's browser by issuing new cookie <quote>dummy</> cookie
        with expiration time set to <quote>now</>.
      </para>
      </section>

      <section><title>Change password</>
      <para> 
        <guimenuitem>Change password</> command allows user to
        change her own password. Password change dialog will prompt
        for user's current password and new password twice to reduce
        risk of typing mistakes in new password.
      </para>
      </section>

      <section><title>Edit settings</>
      <para> 
        <guimenuitem>Edit settings</> command allows user to
        change her email address and toggle automatic email notifications
        on or off. Automatic email notifications are sent to user's
        email address when user's changes come to effect (new DNS
        configuration is generated using <filename>sauron</> command
        with <option>--mail</> option).
      </para>
      </section>

      <section><title>Save settings</>
      <para> 
        <guimenuitem>Save settings</> command save user's current
        server and zone selection. When user logs on next time, server
        and zone selections are recalled and user will be in 
        <guimenu>Hosts</> menu by default.
      </para>
      </section>

      <section><title>Frames ON/OFF</>
      <para> 
        <guimenuitem>Frames ON/OFF</> command allows user to
        toggle between frames and non-frames operation mode
        of the web interface. It should be noted that the non-frames
        mode of the web interface is currently faster and better tested.
      </para>
      </section>

      <section><title>Lastlog</>
      <para> 
        <guimenuitem>Lastlog</> command displays list or resent
        user sessions (with links to session infos). 
        This command is only available for administrator.
      </para>
      </section>

      <section><title>Session Info</>
      <para> 
        <guimenuitem>Session Info</> command allows administrator
        to browse log information about user sessions by session id
        (SID). Log information contains information about
        what changes user has made to hosts.
        This command is only available for administrator.
      </para>
      </section>

      <section><title>Add news msg</>
      <para> 
        <guimenuitem>Add news msg</> command allows administrator
        to add news system news messages that are displayed when
        to users when they log in.
      </para>
      </section>

    </section>

  </chapter>

  <chapter id="command-ref">
    <title>Command Reference</>
    <para>
      This chapter provides a reference for all the command-line
      utilities included with Sauron. All these utilities have
      built-in help, which can be displayed by invoking them 
      with single argument <option>--help</> (these utilities
      use GNU style long options).
    </para>
    <para>
      These utilities are meant for Sauron administrators and do not 
      implement any access control methods. To protect unauthorized
      access into Sauron database, restrict access to the database
      in PostgreSQL (and don't forget to restrict access to the Sauron
      configuration file if it contains sensitive information such as
      database password).
    </para>

    &command-reference;
  </chapter>

  <appendix id="tech-details">
    <title>Technical Details</>
    <para>
      This appendix describes the Sauron database layout. Sauron database
      contains database version number stored in <filename>settings</>
      table. This database version number must match with the version
      Sauron <quote>back end</> was made for. If database format changes
      in future versions, the database version number will be incremented 
      and a conversion script from previous version will be shipped with
      Sauron.
    </para>
    <para>
    Current Sauron Database version is 1.0
    <figure id="relations-fig"><title>Table Relations</title>
	<graphic scale=60 fileref="relations.eps">
    </figure>
    </para>

    &sql-tables;

  </appendix>

  <appendix id="license">
    <title>Software License</>
    &gpl;
  </appendix>

</book>

